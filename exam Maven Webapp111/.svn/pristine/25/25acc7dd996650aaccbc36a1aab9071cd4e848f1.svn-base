package cn.edu.nenu.clzc.dao.student;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang.ObjectUtils.Null;

import cn.edu.nenu.clzc.commons.core.AbstractDao;
import cn.edu.nenu.clzc.commons.core.expandhandler.ExpandBeanListHandler;
import cn.edu.nenu.clzc.commons.entites.examination.ParamQuestion;
import cn.edu.nenu.clzc.commons.entites.examination.ParamQuestionsType;
import cn.edu.nenu.clzc.commons.entites.student.StudentTest;
import cn.edu.nenu.clzc.commons.enumeration.exception.DaoExceptionEnum;
import cn.edu.nenu.clzc.commons.exception.ContextException;
/**
* @ClassName: StudentTestDao
* @Description: 学生自组卷Dao层操作方法(这里用一句话描述这个类的作用)
* @author Kyrie Irving
* @date 2016年12月4日 下午7:46:31
 */

public class StudentTestDao extends AbstractDao {
    /**
    * @Title: addStudentTest
    * @Description: 添加一个自组卷(这里用一句话描述这个方法的作用)
    * @author Kyrie Irving
    * @param @param studengTest
    * @param @return
    * @param @throws Exception    设定文件
    * @return String    返回类型
    * @throws
     */
	
	public String addStudentTest(StudentTest studengTest) throws Exception {
		String studentId = studengTest.getStudentId();
		String studentTestType = studengTest.getStudentTestType();
		String studengTestInfo = studengTest.getStudentTestInfo();
		String questionsId = studengTest.getQuestionsId();
		Date studentsDate = new Date();
		Object[] params = {studentId,studentTestType,studengTestInfo,questionsId,studentsDate};
		
		String sql = "INSERT INTO student_test(student_test.questions_id,student_test.student_test_type,student_test.student_test_info,student_test.questions_id,student_test.student_test_time)VALUES(?,?,?,?,?)";
		
		String id = null;
		try {
			id = insert(sql, params);
		} catch (ContextException | SQLException e) {
			logger.error(DaoExceptionEnum.AddStudentTestFaild.getInfo(),e);
			throw new Exception(DaoExceptionEnum.AddStudentTestFaild.getInfo());
		}
		return id;
	}
	
	/**
	* @Title: deleteStudentTest
	* @Description: 删除一个学生自组卷(这里用一句话描述这个方法的作用)
	* @author Kyrie Irving
	* @param @param id
	* @param @param studentTestIsDelete
	* @param @return
	* @param @throws Exception    设定文件
	* @return int    返回类型
	* @throws
	 */
	
	public int deleteStudentTest(String id, String studentTestIsDelete) throws Exception {
		String sql = "UPDATE student_test SET student_test_is_delete = ? WHERE id = ?";
		Object[] params = {studentTestIsDelete, id};
		int i = 0;
		try {
			i = update(sql, params);
		} catch (ContextException e) {
			logger.error(DaoExceptionEnum.DeleteStudentTestFaild.getInfo(),e);
			throw new Exception(DaoExceptionEnum.DeleteStudentTestFaild.getInfo());
		}
		return i;
	}
	
	
	
	/**
	* @Title: selectQuestionsType
	* @Description: 根据册的描述查询学生自组卷(这里用一句话描述这个方法的作用)
	* @author Kyrie Irving
	* @param @return
	* @param @throws Exception    设定文件
	* @return List<ParamQuestionsType>    返回类型
	* @throws
	 */
	
	public List<StudentTest> selectQuestionsType() throws Exception {
		List<StudentTest> list = new ArrayList<StudentTest>();
		String sql = "";
		Object param = "" ;
		
		try {
			list = query(sql, new ExpandBeanListHandler<StudentTest>(StudentTest.class),param);
		} catch (ContextException e) {
			logger.error(DaoExceptionEnum.SelectTypeFaild.getInfo(),e);
			throw new Exception(DaoExceptionEnum.SelectTypeFaild.getInfo());
		}
		return list;
	}
	
	
	
	
	
	
	
	
	
	
	
//	/**
//	 * 
//	 * @Title: selectQuestion
//	 * @Description: 根据大题查询出对应的所有可见小题
//	 * @return: List<ParamQuestion>
//	 * @throws Exception 
//	 */
//	public List<ParamQuestion> selectQuestion(String questionsId) throws Exception {
//		List<ParamQuestion> list = new ArrayList<ParamQuestion>();
//		String sql = "SELECT * from param_question WHERE questions_id = ? AND question_is_delete = '0' ORDER BY question_time ASC";
//		Object param = questionsId;
//		try {
//			list = query(sql, new ExpandBeanListHandler<ParamQuestion>(ParamQuestion.class), param);
//		} catch (ContextException e) {
//			logger.error(DaoExceptionEnum.SelectQuestionFaild.getInfo(),e);
//			throw new Exception(DaoExceptionEnum.SelectQuestionFaild.getInfo());
//		}
//		return list;
//	}
//	



}
