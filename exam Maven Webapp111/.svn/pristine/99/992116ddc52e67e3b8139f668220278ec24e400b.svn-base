package cn.edu.nenu.clzc.controller.examination;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;

import org.apache.commons.fileupload.RequestContext;

import cn.edu.nenu.clzc.commons.constant.RequestConstant;
import cn.edu.nenu.clzc.commons.constant.ViewUriConstant;
import cn.edu.nenu.clzc.commons.core.SystemConstant;
import cn.edu.nenu.clzc.commons.core.annotation.RequestMapping;
import cn.edu.nenu.clzc.commons.core.annotation.ResponseBody;
import cn.edu.nenu.clzc.commons.entites.examination.ParamEdition;
import cn.edu.nenu.clzc.commons.entites.teacher.TeacherExamination;
import cn.edu.nenu.clzc.commons.enumeration.exception.ControllerExceptionEnum;
import cn.edu.nenu.clzc.commons.exception.ContextException;
import cn.edu.nenu.clzc.commons.extend.ControllerExtend;
import cn.edu.nenu.clzc.commons.utils.PageBean;
import cn.edu.nenu.clzc.commons.vo.examination.ParamEditionVo;
import cn.edu.nenu.clzc.commons.vo.examination.ParamUnitVo;

/**
 * 
 * @author 我要睡觉了
 * @Title ExaminationBackController.java
 * @Description 试卷部分的Controller
 * @time 2016年12月8日 下午9:47:20
 */

@WebServlet(value=RequestConstant.EXAMINATION_BACK_CONTROLLER)
public class ExaminationBackController extends ControllerExtend {

	private static final long serialVersionUID = 1L;
	
	
	/**
	 * 
	 * @Title: dispatchBackEdition
	 * @Description: 跳转到后台的册展现页
	 * @return: void
	 * @throws IOException 
	 * @throws ServletException 
	 */
	@RequestMapping(value=RequestConstant.DISPATCH_BACK_EDITION, method=SystemConstant.GET)
	public void dispatchBackEdition() throws ServletException, IOException {
		requestDispatcher(ViewUriConstant.BACK_EDITION);
	}
	
	
	/**
	 * 
	 * @Title: ajaxGetBackEdition
	 * @Description: ajax请求后台显示册
	 * @return: void
	 * @throws IOException 
	 * @throws ServletException 
	 */
	@RequestMapping(value=RequestConstant.AJAX_GET_BACK_EDITION)
	@ResponseBody
	public void ajaxGetBackEdition() throws ServletException, IOException {
		List<ParamEditionVo> list = new ArrayList<ParamEditionVo>();
		try {
			list = paramEditionService.selectAllEdition();
		} catch (ContextException e) {
			logger.error(ControllerExceptionEnum.BackEditionException.getInfo(),e);
			to500(ControllerExceptionEnum.BackEditionException.getInfo(), ViewUriConstant.ERROR500);
		}
		putJson("getEdition", list);
		sendJson();
	}
	
	
	
	/**
	 * 
	 * @Title: ajaxGetBackUnit 
	 * @Description: ajax请求后台显示单元
	 * @return: void
	 * @throws ServletException 
	 * @throws IOException 
	 */
	@RequestMapping(value=RequestConstant.AJAX_GET_BACK_UNIT)
	@ResponseBody
	public void ajaxGetBackUnit() throws ServletException, IOException {
		int currentPage = getInt("currentPage");
		String editionId = getString("editionId");
		List<ParamUnitVo> list = new ArrayList<ParamUnitVo>();
		int size = 0;
		try {
			list = paramUnitService.selectUnitByEdition(editionId, currentPage);
			size = paramUnitService.selectAllPage();
		} catch (ContextException e) {
			logger.error(ControllerExceptionEnum.BackUnitException.getInfo(),e);
			to500(ControllerExceptionEnum.BackUnitException.getInfo(), ViewUriConstant.ERROR500);
		}
		PageBean pageBean = new PageBean(size, list);
		sendJson(pageBean);
	}
	
	
	/**
	 * 
	 * @Title: dispatchBackExamination
	 * @Description: 跳转到后端试卷展示页面
	 * @return:void
	 * @throws IOException 
	 * @throws ServletException 
	 */
	@RequestMapping(value=RequestConstant.DISPATCH_BACK_EXAMINATION)
	public void dispatchBackExamination() throws ServletException, IOException {
		requestDispatcher(ViewUriConstant.BACK_EXAMINATION);
	}

	
	/**
	 * 
	 * @Title: ajaxGetBackExamination
	 * @Description: ajax请求获取后端试卷展示页面
	 * @return: void
	 * @throws ServletException 
	 * @throws IOException 
	 */
	@RequestMapping(value=RequestConstant.AJAX_GET_BACK_EXAMINATION)
	@ResponseBody
	public void ajaxGetBackExamination() throws ServletException, IOException {
		int currentPage = getInt("currentPage");
		String unitId = getString("unidId");
		String examinationType = getString("examinationType");
		List<TeacherExamination> list = new ArrayList<TeacherExamination>();
		int size = 0;
		try {
			list = teacherExaminationService.selectAllExaminationByUnit(unitId, examinationType, currentPage);
			size = teacherExaminationService.selectAllExaminationByUnitPage(unitId, examinationType);
		} catch (ContextException e) {
			logger.error(ControllerExceptionEnum.BackExaminationException.getInfo(),e);
			to500(ControllerExceptionEnum.BackExaminationException.getInfo(), ViewUriConstant.ERROR500);
		}
		PageBean pageBean = new PageBean(size, list);
		sendJson(pageBean);
	}
	
	
	
	 
	
	
	
	
	
	
	
	
}
