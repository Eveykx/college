package cn.edu.nenu.clzc.service.examination;

import java.util.ArrayList;
import java.util.List;

import cn.edu.nenu.clzc.commons.entites.examination.ParamQuestions;
import cn.edu.nenu.clzc.commons.exception.ContextException;
import cn.edu.nenu.clzc.commons.extend.ServiceExtend;

/**
 * 
 * @author 我要睡觉了
 * @Title ParamQuestionsService.java
 * @Description 大题的service
 * @time 2016年12月7日 上午8:54:54
 */

public class ParamQuestionsService extends ServiceExtend {

	
	/**
	 * 
	 * @Title: addQuestions
	 * @Description: 添加大题
	 * @return: String 
	 * @throws ContextException 
	 */
	public String addQuestions(ParamQuestions paramQuestions) throws ContextException {
		String id = null;
		try {
			id = paramQuestionsDao.addQuestions(paramQuestions);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return id;
	}
	
	
	/**
	 * 
	 * @Title: deleteQuestions
	 * @Description: 更改大题是否可见
	 * @return: int
	 * @throws ContextException 
	 */
	public int deleteQuestions(String id, String value) throws ContextException {
		int temp = 0;
		try {
			temp = paramQuestionsDao.deleteQuestions(id, value);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return temp;
	}
	
	
	/**
	 * 
	 * @Title: selectQuestionsByExam
	 * @Description: 按照试卷查询出所有可见的大题
	 * @return: List<ParamQuestions>
	 * @throws ContextException 
	 */
	public List<ParamQuestions> selectQuestionsByExam(String examinationId) throws ContextException {
		List<ParamQuestions> list = new ArrayList<ParamQuestions>();
		try {
			list = paramQuestionsDao.selectQuestionsByExam(examinationId);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return list;
	}
	
	
	/**
	 * 
	 * @Title: selectAllQuestionsByExam
	 * @Description: 按照试卷查询出所有的大题
	 * @return: List<ParamQuestions>
	 * @throws ContextException 
	 */
	public List<ParamQuestions> selectAllQuestionsByExam(String examinationId) throws ContextException {
		List<ParamQuestions> list = new ArrayList<ParamQuestions>();
		try {
			list = paramQuestionsDao.selectAllQuestionsByExam(examinationId);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return list;
	}
	
	
	/**
	 * 
	 * @Title: selectQuestionsByType
	 * @Description: 按照题型查询出所有可见的大题
	 * @return: List<ParamQuestions>
	 * @throws ContextException 
	 */
	public List<ParamQuestions> selectQuestionsByType(String examinationId) throws ContextException {
		List<ParamQuestions> list = new ArrayList<ParamQuestions>();
		try {
			list = paramQuestionsDao.selectQuestionsByType(examinationId);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return list;
	}
	
	
	/**
	 * 
	 * @Title: selectQuestionsByType
	 * @Description: 按照题型查询出所有的大题
	 * @return: List<ParamQuestions>
	 * @throws ContextException 
	 */
	public List<ParamQuestions> selectAllQuestionsByType(String examinationId) throws ContextException {
		List<ParamQuestions> list = new ArrayList<ParamQuestions>();
		try {
			list = paramQuestionsDao.selectAllQuestionsByType(examinationId);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return list;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
