package cn.edu.nenu.clzc.service.examination;

import java.util.ArrayList;
import java.util.List;

import cn.edu.nenu.clzc.commons.entites.examination.ParamUnit;
import cn.edu.nenu.clzc.commons.exception.ContextException;
import cn.edu.nenu.clzc.commons.extend.ServiceExtend;
import cn.edu.nenu.clzc.commons.vo.examination.ParamUintVo;

/**
 * 
* @Author Kyrie Irving
* @Title: AddEditionService 
* @Description: 单元操作的Sercvice层
* @Date 2016年11月18日 下午9:29:38
 */

public class ParamUnitService extends ServiceExtend {
	
	/**
	* @Title: addEdition 
	* @Author Kyrie Irving
	* @Description: 添加一个单元(这里用一句话描述这个方法的作用) 
	* @param @param paramEdition
	* @param @return
	* @param @throws ContextException    设定文件 
	* @return String    返回类型 
	* @throws
	 */
	public String addUnit(ParamUnit ParamUnit) throws ContextException {
		String pu = null;
		try {
			pu = ParamUnitDao.addUnit(ParamUnit);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return pu;
	}
	
	/**
	 * 
	* @Title: updateEditiion 
	* @Author Kyrie Irving
	* @Description: 修改单元的显示状态的方法(这里用一句话描述这个方法的作用) 
	* @param @param id
	* @param @param editionIsDelete
	* @param @return
	* @param @throws ContextException    设定文件 
	* @return int    返回类型 
	* @throws
	 */
	public int updateUnit(String id, String unitIsDelete) throws ContextException {
		int xu = 0;
		try {
			xu = ParamUnitDao.updateUNit(id, unitIsDelete);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return xu;
	}
	
	
	
	/**
	* @Title: selectByEditionName 
	* @Author Kyrie Irving
	* @Description:根据单元名查找册(这里用一句话描述这个方法的作用) 
	* @param @param editionName
	* @param @param currentPage
	* @param @return
	* @param @throws ContextException    设定文件 
	* @return List<ParamUintVo>    返回类型 
	* @throws
	 */
	public List<ParamUintVo> selectByUnitName(String unitName ,int currentPage) throws ContextException{
		List<ParamUintVo> list = new ArrayList<ParamUintVo>();
		try {
			list = ParamUnitDao.selectByUnitName(unitName,currentPage);
		} catch (Exception e) {
			logger.error(e);
			throw new ContextException(e);
		}
		return list;
	}
	

}
	
	
	
	